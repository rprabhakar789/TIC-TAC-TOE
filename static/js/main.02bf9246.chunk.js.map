{"version":3,"sources":["logo.svg","CongratulationsDialog.js","tic-tac-toe.js","App.js","reportWebVitals.js","index.js"],"names":["BootstrapDialog","styled","Dialog","theme","padding","spacing","minWidth","BootstrapDialogTitle","props","children","onClose","other","DialogTitle","sx","m","p","IconButton","onClick","position","right","top","color","palette","grey","CongratulationsDialog","selectedValue","open","id","DialogContent","dividers","gutterBottom","useStyles","makeStyles","gamepage","display","playerInfo","margin","marginTop","justifyContent","alignItems","button","width","height","border","active","backgroundColor","borderRadius","scoreboard","float","justify","resetButton","player","playerName","turn","Tictactoe","classes","a","Array","fill","winningcells","React","useState","cell","win","winner","filled","winningCells","state","setState","player1","player2","edit1","edit2","useEffect","console","log","handleClick","event","key","didWin","row","Math","floor","col","sym","didComplete","handleReset","Grid","className","item","xs","container","direction","style","indexOf","borderLeft","borderTop","Box","borderRight","borderBottom","Button","variant","App","anchor","options","toggleDrawer","type","AppBar","Toolbar","Typography","Drawer","role","onKeyDown","List","map","text","index","ListItem","ListItemIcon","ListItemText","primary","Divider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.02bf9246.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Button from '@mui/material/Button';\r\nimport { styled } from '@mui/material/styles';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nconst BootstrapDialog = styled(Dialog)(({ theme }) => ({\r\n  '& .MuiDialogContent-root': {\r\n    padding: theme.spacing(2),\r\n    minWidth:\"200px\",\r\n  },\r\n  '& .MuiDialogActions-root': {\r\n    padding: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst BootstrapDialogTitle = (props) => {\r\n  const { children, onClose, ...other } = props;\r\n\r\n  return (\r\n    <DialogTitle sx={{ m: 0, p: 2 }} {...other}>\r\n      {children}\r\n      {onClose ? (\r\n        <IconButton\r\n          aria-label=\"close\"\r\n          onClick={onClose}\r\n          sx={{\r\n            position: 'absolute',\r\n            right: 8,\r\n            top: 8,\r\n            color: (theme) => theme.palette.grey[500],\r\n          }}\r\n        >\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </DialogTitle>\r\n  );\r\n};\r\n\r\nBootstrapDialogTitle.propTypes = {\r\n  children: PropTypes.node,\r\n  onClose: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default function CongratulationsDialog(props) {\r\n  const { onClose, selectedValue, open } = props;\r\n\r\n  return (\r\n    <div>\r\n      <BootstrapDialog\r\n        onClose={onClose}\r\n        aria-labelledby=\"customized-dialog-title\"\r\n        open={open}\r\n      >\r\n        <BootstrapDialogTitle id=\"customized-dialog-title\" onClose={onClose}>\r\n          Congratulations\r\n        </BootstrapDialogTitle>\r\n        <DialogContent dividers>\r\n         \r\n          <Typography gutterBottom>\r\n            Player{selectedValue} won\r\n          </Typography>\r\n        </DialogContent>\r\n      </BootstrapDialog>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n{/*\r\nimport * as React from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport PropTypes from 'prop-types';\r\nimport Button from '@mui/material/Button';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport Typography from '@mui/material/Typography';\r\nimport { blue } from '@mui/material/colors';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  dialogBox:{\r\n    minWidth:\"200px\",\r\n    minHeight:\"400px\",\r\n    display:\"flex\",\r\n    justifyContent:\"center\",\r\n    alignItems:\"center\"\r\n  },\r\n  '& .MuiDialogContent-root': {\r\n    padding: theme.spacing(2),\r\n  },\r\n  '& .MuiDialogActions-root': {\r\n    padding: theme.spacing(1),\r\n  },\r\n}))\r\n\r\nfunction CongratulationsDialog(props) {\r\n  \r\n  const classes = useStyles();\r\n  const { onClose, selectedValue, open } = props;\r\n\r\n  const handleClose = () => {\r\n    onClose(selectedValue);\r\n  };\r\n\r\n  const handleListItemClick = (value) => {\r\n    onClose(value);\r\n  };\r\n  const players=[\"Rahul\",\"Shubham\"]\r\n  return (\r\n    <Dialog open={open} disableTypography  onClose={onClose} className={classes.dialogBox}>\r\n      <DialogTitle>Congratulations</DialogTitle>\r\n      Player{selectedValue} won\r\n    </Dialog>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default CongratulationsDialog;*/}\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport './App.css';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Grid, Nav, Button,Container, Card, Box} from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport CongratulationsDialog from './CongratulationsDialog'\r\n//import { red, blue } from 'material-ui/colors'\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n  gamepage:{\r\n    display:\"block\"\r\n  },\r\n  playerInfo:{\r\n    display:\"flex\",\r\n    margin:\"auto\",\r\n    marginTop:\"50px\",\r\n    justifyContent:\"center\",\r\n    alignItems:\"center\"\r\n  },\r\n  button: {\r\n    width:100,\r\n    height:100,\r\n    border:\"1px solid grey\",\r\n  },\r\n  active: {\r\n    backgroundColor:\"green\",\r\n    borderRadius:\"5px\",\r\n  },\r\n  scoreboard:{\r\n    float:'left',\r\n    margin:20,\r\n    padding:20,\r\n    justify:\"flex-end\"\r\n  },\r\n  resetButton:{\r\n    marginTop:20\r\n  },\r\n  player:{\r\n    border:\"2px solid green\"\r\n  },\r\n  playerName:{\r\n    height:\"40px\",\r\n    borderRadius:\"10px\",\r\n    display:\"flex\",\r\n    justifyContent:\"center\",\r\n    alignItems:\"center\"\r\n  },\r\n  turn:{\r\n    border:\"1px solid green\",\r\n    borderRadius:\"5px\"\r\n  }\r\n\r\n}));\r\n\r\nfunction Tictactoe() {\r\n\r\n const classes = useStyles();\r\n  let a = Array(10).fill(\"\");\r\n  let winningcells = []\r\n  const [state, setState] = React.useState({\r\n     turn: 0,\r\n     cell:a,\r\n     win:0,\r\n     winner:0,\r\n     filled:0,\r\n     winningCells:[]\r\n   });\r\n  const [players,setPlayers]=React.useState({\r\n    player1:\"Player 1\",\r\n    player2:\"Player 2\"\r\n  })\r\n  const [editable,setEditable]=React.useState({\r\n    edit1:false,\r\n    edit2:false\r\n  })\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const [selectedValue, setSelectedValue] = React.useState(0);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = (value) => {\r\n    setOpen(false);\r\n    setSelectedValue(value);\r\n  };\r\n  const didComplete=(key, turn, cell)=>{\r\n    console.log(key)\r\n    console.log(cell)\r\n    var row = Math.floor(key/3);\r\n    var col = key%3;\r\n    console.log(row+\" \"+col);\r\n    var sym = turn%2==0?'O':'X';\r\n    if(\r\n      cell[row*3+1]==sym&&\r\n      cell[row*3+2]==sym&&\r\n      cell[row*3+3]==sym\r\n    ){\r\n        winningcells=[row*3+1, row*3+2, row*3+3]\r\n        return true;\r\n    }\r\n\r\n    if(\r\n      cell[col+1]==sym&&\r\n      cell[4+col]==sym&&\r\n      cell[7+col]==sym\r\n    )\r\n    {\r\n      winningcells=[col+1, col+4, col+7]\r\n      return true;\r\n    }\r\n    if(row==col&&\r\n      cell[1]==sym&&\r\n      cell[5]==sym&&\r\n      cell[9]==sym\r\n    )\r\n    {\r\n      winningcells=[1, 5, 9]\r\n      return true;\r\n    }\r\n    if(row+col==2&&\r\n      cell[3]==sym&&\r\n      cell[5]==sym&&\r\n      cell[7]==sym\r\n    )\r\n    {\r\n      winningcells=[3, 5, 7]\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  useEffect(() => {\r\n    console.log(\"we won\")\r\n    console.log(state.winningCells)\r\n}, [state.winningCells])\r\n  const handleClick=(event,key)=>{\r\n    console.log(key);\r\n    console.log(\"winningcells\");\r\n    console.log(state.winningCells);\r\n    if(state.win==1)\r\n    {\r\n      return;\r\n    }\r\n    if(state.cell[key]!=\"\")\r\n    {\r\n      return;\r\n    }\r\n\r\n    a = state.cell;\r\n    winningcells = state.winningCells\r\n    a[key]=(state.turn==0?'O':'X');\r\n\r\n    var didWin = didComplete(key-1,state.turn,a);\r\n    console.log(\"didWin \" +didWin)\r\n    if(didWin===true)\r\n    {\r\n      console.log(\"winning cells\")\r\n      console.log(winningcells)\r\n      setState({\r\n        turn: 1-state.turn,\r\n        cell:a,\r\n        win:1,\r\n        winner:state.turn+1,\r\n        filled:state.filled+1,\r\n        winningCells: winningcells\r\n      },()=>{\r\n        console.log(\"state: \")\r\n        console.log(state.winningCells);\r\n      })\r\n    }\r\n    else{\r\n      console.log(\"didn't win yet\")\r\n      setState({\r\n        turn: 1-state.turn,\r\n        cell:a,\r\n        win:0,\r\n        winner:0,\r\n        filled:state.filled+1,\r\n        winningCells: state.winningCells\r\n      })\r\n    }\r\n\r\n  }\r\n  const handleReset=()=>{\r\n    a = Array(10).fill(\"\");\r\n    setState({\r\n      turn: 0,\r\n      cell:a,\r\n      win:0,\r\n      winner:0,\r\n      filled:0,\r\n      winningCells:[]\r\n    })\r\n  }\r\n  const changeEdit1 = () =>\r\n  {\r\n    setEditable({\r\n      edit1: true,\r\n      edit2: false\r\n     })\r\n  }\r\n  const changePlayer1=(event)=>{\r\n    setPlayers({\r\n      player1:event.target.value,\r\n      player2:state.player2\r\n    })\r\n  }\r\n  const changePlayer2=(event)=>{\r\n    setPlayers({\r\n      player2:event.target.value,\r\n      player1:state.player1\r\n    })\r\n  }\r\n  if(state.win===1){\r\n    console.log(\"will show congratulations dialog\")\r\n    return(\r\n    <CongratulationsDialog \r\n    selectedValue={state.winner}\r\n    open={state.win===1}\r\n    onClose={handleReset}/>\r\n    )\r\n  }\r\n  return (\r\n    <Grid className={classes.gamepage}>\r\n    <Grid  className={classes.playerInfo}>\r\n      <Grid item xs={3}\r\n      className={classes.playerName+\" \"+(state.turn===0?classes.turn:\"\")}\r\n      >\r\n        Player1 (O)\r\n      </Grid>\r\n    <Grid item xs={3}>vs</Grid>\r\n      <Grid item xs={3}\r\n      className={classes.playerName+\" \"+(state.turn===1?classes.turn:\"\")}>\r\n        Player2 (X)\r\n      </Grid>\r\n    </Grid>\r\n    <Grid\r\n      container\r\n      direction=\"column\"\r\n      alignItems=\"center\"\r\n      justify=\"center\"\r\n      style={{marginTop:\"50px\"}}\r\n    >\r\n\r\n      <div className=\"game-box\" style={{display:\"block\"}}>\r\n          <div className=\"box-row\" style={{display:\"flex\"}}>\r\n            <div className={ `${classes.button} + ${state.winningCells.indexOf(1)===-1 ? \"\" : classes.active}`} style={{ borderLeft:\"none\",borderTop:\"none\"}} onClick={(event)=>handleClick(event,1)}><h1>{state.cell[1]}</h1></div>\r\n            <Box className={ `${classes.button} + ${state.winningCells.indexOf(2)===-1 ? \"\" : classes.active}`} style={{ borderTop:\"none\" }}   onClick={(event)=>handleClick(event,2)}><h1>{state.cell[2]}</h1></Box>\r\n            <Box  className={ `${classes.button} +  ${state.winningCells.indexOf(3)===-1 ? \"\" : classes.active}`} style={{ borderRight:\"none\",borderTop:\"none\" }}  onClick={(event)=>handleClick(event,3)}><h1>{state.cell[3]}</h1></Box>\r\n          </div>\r\n          <div style={{display:\"flex\"}}>\r\n            <Box className={ `${classes.button} +  ${state.winningCells.indexOf(4)===-1 ? \"\" : classes.active}`} style={{borderLeft:\"none\", }}onClick={(event)=>handleClick(event,4)}><h1>{state.cell[4]}</h1></Box>\r\n            <Box className={ `${classes.button} +  ${state.winningCells.indexOf(5)===-1 ? \"\" : classes.active}`}  onClick={(event)=>handleClick(event,5)}><h1>{state.cell[5]}</h1></Box>\r\n            <Box  className={ `${classes.button} +  ${state.winningCells.indexOf(6)===-1 ? \"\" : classes.active}`}style={{ borderRight:\"none\"}}onClick={(event)=>handleClick(event,6)}><h1>{state.cell[6]}</h1></Box>\r\n          </div>\r\n          <div style={{display:\"flex\"}}>\r\n            <Box className={ `${classes.button} +  ${state.winningCells.indexOf(7)===-1 ? \"\" : classes.active}`} style={{borderLeft:\"none\",borderBottom:\"none\"}}  onClick={(event)=>handleClick(event,7)}><h1>{state.cell[7]}</h1></Box>\r\n            <Box className={ `${classes.button} +  ${state.winningCells.indexOf(8)===-1 ? \"\" : classes.active}`}style={{ borderBottom:\"none\" }}onClick={(event)=>handleClick(event,8)}><h1>{state.cell[8]}</h1></Box>\r\n            <Box  className={ `${classes.button} +  ${state.winningCells.indexOf(9)===-1 ? \"\" : classes.active}`}style={{ borderBottom:\"none\", borderRight:\"none\"}} onClick={(event)=>handleClick(event,9)}><h1>{state.cell[9]}</h1></Box>\r\n          </div>\r\n      </div>\r\n      <Button  className={classes.resetButton} variant=\"contained\" color=\"primary\" onClick={(event)=>handleReset()}>Reset</Button>\r\n\r\n    </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default Tictactoe;\r\n","import * as React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport Box from '@material-ui/core/Box';\nimport { Grid, Nav, Drawer, Button } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Divider from '@material-ui/core/Divider'\nimport Tictactoe from './tic-tac-toe'\nfunction App() {\n  const options = ['Play with friend', 'Play with computer','Change Theme']\n  const [state, setState] = React.useState({\n   key:'0'\n });\n\n\n     const toggleDrawer = (anchor, open) => (event) => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n\n    setState({ ...state, [anchor]: open });\n  };\n\n  const list = (anchor) => (\n    <Box\n      sx={{ width: anchor === 'top' || anchor === 'bottom' ? 'auto' : 250 }}\n      role=\"presentation\"\n      onClick={toggleDrawer(anchor, false)}\n      onKeyDown={toggleDrawer(anchor, false)}\n    >\n      <List>\n        {options.map((text, index) => (\n          <ListItem button key={text}>\n            <ListItemIcon>\n            </ListItemIcon>\n            <ListItemText primary={text} />\n          </ListItem>\n        ))}\n      </List>\n      <Divider />\n    </Box>\n  );\n\n  return (\n    <div className=\"App\">\n        <AppBar position=\"static\">\n                <Toolbar>\n                    <Typography variant=\"title\" color=\"inherit\">\n                        Tic Tac Toe\n                    </Typography>\n                    <Grid container justify=\"flex-end\">\n                      <Button style={{display:\"flex\",float:\"right\"}} onClick={toggleDrawer('right', true)}>More</Button>\n                      <Drawer\n                        anchor='right'\n                        open={state['right']}\n                        onClose={toggleDrawer('right', false)}\n                      >\n                      {list('right')}\n                      </Drawer>\n                    </Grid>\n\n\n                </Toolbar>\n          </AppBar>\n      <Tictactoe/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}